package com.test.crud;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.test.conn.DBConnection;

public class CRUDClass {

	public CRUDClass() {

		Ex1("홍길동", "영업부", "2020-03-01", 2500000);  // 2020년부터 출판된 도서목록
		Ex1("이순신", "인사부", "2019-07-15", 3200000);
		Ex1("강감찬", "개발부", "2021-01-10", 2800000);
		
		Ex2("개발부");  // 홍길동 회원이 대출한 도서 목록
		
		Ex3();	// 반납하지 않은 도서 목록
		
		Ex4();	// 도서별 대출 횟수
		
		Ex5();	// 가장 비싼 도서
		
	}
	
	private void Ex1(String name, String dept, String date, int salary) {
		String sql = "INSERT INTO employee (EmpName, Dept, HireDate, Salary)\r\n"
				+ "VALUES\r\n"
				+ "(?, ?, ?, ?)";
		Connection conn = null;
		PreparedStatement pstmt = null;
		
		try {
			conn = DBConnection.getConnection();
			pstmt = conn.prepareStatement(sql);	
			pstmt.setString(1, name);
			pstmt.setString(2, dept);
			pstmt.setDate(3, java.sql.Date.valueOf(date));
			pstmt.setInt(4, salary);
			pstmt.executeUpdate();
			
			System.out.println("데이터 삽입 성공");
		} catch (SQLException se) {
			se.printStackTrace();
			System.out.println("데이터 삽입 실패");
		} finally {
			DBConnection.close(pstmt, conn);
			System.out.println("데이터 삽입 종료");
			System.out.println();
		}
	}

	private void Ex2(String dept) {
		String sql = "SELECT EmpNo `사번`, EmpName `사원명`, Salary `급여` FROM employee WHERE Dept = ?";
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		try {
			conn = DBConnection.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, dept);
			
			rs = pstmt.executeQuery();
			
			System.out.println(dept + " 정보 조회 목록");
			while(rs.next()) {
				String emNumber = rs.getString("사번");
				String emName = rs.getString("사원명");
				String sal = rs.getString("급여");
				System.out.println(" - " + "사번: " + emNumber + "사원명: " + emName 
						+ "급여: " + sal);
			}
		} catch (SQLException se) {
			se.printStackTrace();
			System.out.println(dept + " 정보 조회");
		} finally {
			DBConnection.close(rs, pstmt, conn);
			System.out.println(dept + " 정보 조회");
			System.out.println();
		}
	}

	private void Ex3() {
		String sql = "SELECT b.BookTitle `미반납도서` FROM bookTable b \r\n"
				+ "INNER JOIN rentalTable r ON b.BookID=r.BookID\r\n"
				+ "WHERE r.ReturnDate IS NULL \r\n"
				+ "GROUP BY b.BookID, b.BookTitle";
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		try {
			conn = DBConnection.getConnection();
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			
			System.out.println("반납하지 않은 도서 목록");
			while(rs.next()) {
				String title = rs.getString("미반납도서");
				System.out.println(" - " + title);
			}
		} catch (SQLException se) {
			se.printStackTrace();
			System.out.println("반납하지 않은 도서 목록 조회 실패");
		} finally {
			DBConnection.close(rs, pstmt, conn);
			System.out.println("반납하지 않은 도서 목록 조회 종료");
			System.out.println();
		}
	}

	private void Ex4() {
		String sql = "SELECT b.BookTitle `도서명`, COUNT(r.RentalID) AS `대출 횟수` \r\n"
				+ "FROM booktable b LEFT join rentaltable r ON r.BookID=b.BookID \r\n"
				+ "group BY b.BookID, b.BookTitle ORDER BY b.BookID;";
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		try {
			conn = DBConnection.getConnection();
			pstmt = conn.prepareStatement(sql);			
			rs = pstmt.executeQuery();
			
			System.out.println("도서별 대출 횟수");
			while(rs.next()) {
				String title = rs.getString("도서명");
				String num = rs.getString("대출 횟수");
				System.out.println(" - " + title + ": " + num);
			}
			System.out.println("도서별 대출 횟수 조회 성공");
		} catch (SQLException se) {
			se.printStackTrace();
			System.out.println("도서별 대출 횟수 조회 실패");
		} finally {
			DBConnection.close(rs, pstmt, conn);
			System.out.println("도서별 대출 횟수 조회 종료");
			System.out.println();
		}
	}

	private void Ex5() {
		String sql = "SELECT BookTitle `가장 비싼 도서` FROM bookTable \r\n"
				+ "WHERE price = (SELECT MAX(price) FROM bookTable)";
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		try {
			conn = DBConnection.getConnection();
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			
			System.out.println("가장 비싼 도서");
			while(rs.next()) {
				String title = rs.getString("가장 비싼 도서");
				System.out.println(" - " + title);
			}
		} catch (SQLException se) {
			se.printStackTrace();
			System.out.println("가장 비싼 도서 조회 실패");
		} finally {
			DBConnection.close(rs, pstmt, conn);
			System.out.println("가장 비싼 도서 조회 종료");
			System.out.println();
		}
	}
}
